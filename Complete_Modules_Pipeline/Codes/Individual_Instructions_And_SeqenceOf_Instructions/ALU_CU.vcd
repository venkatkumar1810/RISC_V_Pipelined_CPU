$date
	Fri Apr 02 11:41:35 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ALU_CU_tb $end
$var wire 4 ! Operation [3:0] $end
$var reg 2 " ALUOp [1:0] $end
$var reg 6 # Fun6 [5:0] $end
$scope module alucuu $end
$var wire 2 $ AluOp [1:0] $end
$var wire 6 % fun6 [5:0] $end
$var wire 1 & w2 $end
$var wire 1 ' w1 $end
$var wire 4 ( operation [3:0] $end
$scope module and2 $end
$var wire 1 ) and_out $end
$var wire 1 * input2 $end
$var wire 1 ' input1 $end
$upscope $end
$scope module and4 $end
$var wire 1 & and_out $end
$var wire 1 + input1 $end
$var wire 1 , input2 $end
$upscope $end
$scope module and5 $end
$var wire 1 - and_out $end
$var wire 1 . input1 $end
$var wire 1 / input2 $end
$upscope $end
$scope module or2 $end
$var wire 1 0 input1 $end
$var wire 1 1 input2 $end
$var wire 1 ' or_out $end
$upscope $end
$scope module or3 $end
$var wire 1 & input1 $end
$var wire 1 2 input2 $end
$var wire 1 3 or_out $end
$upscope $end
$scope module or4 $end
$var wire 1 4 input1 $end
$var wire 1 5 input2 $end
$var wire 1 6 or_out $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
bx (
x'
x&
bx %
bx $
bx #
bx "
bx !
$end
#5
16
0)
15
03
b10 !
b10 (
0-
1/
0'
14
0&
0*
0,
02
0.
00
01
0+
b0 "
b0 $
b0 #
b0 %
#10
b110 !
b110 (
13
0/
12
1.
b1 "
b1 $
#15
05
b10 !
b10 (
03
1/
1*
1,
02
0.
b10 "
b10 $
#20
b110 !
b110 (
13
1&
1+
b10 #
b10 %
#25
06
b0 !
b0 (
03
04
0&
0+
b100 #
b100 %
#30
b1 !
b1 (
1)
1'
11
b101 #
b101 %
#35
0)
16
b110 !
b110 (
13
0'
14
1&
01
1+
b10 #
b10 %
#45
