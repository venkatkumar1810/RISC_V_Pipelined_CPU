addi	x2,x2,-48 #sp = sp - 48
#save   x8 
sw	x8,44(x2) #for array1 
#update x8 
addi	x8,x2,48  # s0 = sp + 48; -> s0= (sp - 48) + 48; s0 = sp
#init arr[] to memory
addi	x10,x0,3 		# a5=3
sw	x10,0(x8)	#arr1[0] = 3
addi	x10,x0,5 		# a5=5
sw	x10,4(x8)	#arr1[1] = 5
addi	x10,x0,1 		# a5=1
sw	x10,8(x8)	#arr1[2] = 1

lw x12,0(x8)
lw x12,4(x8)
lw x12,8(x8)
addi x9, x8, 0 # x9=&A[0]
addi x10, x0, 0 # sum=0
addi x11, x0, 0 # i=0
beq x11,x13,8
beq x11,x11,-20
end:


binary converstions
--------------------
1. addi sp,sp,-48
1111 1101 0000 0001 0000 0001 0001 0011
F    D     0   1     0    1    1    3   

2. sw	x8,44(x2) #for array
0000 0010 1100 0001 0010  0110 0010 0011
0     2    c    1    2    6 2     3 

3. addi	x8,x2,48 
0000 0011 0000 0001 0000 0100 0001 0011
0    3    0    1     0    4     1     3

4. addi	x10,x0,3 
0000 0000 0011 0000 0000 0101 0001 0011
0     0     3   0     0    5   1    3

5. sw x10,0(x8) #for array
0000 0000 1010 0001 0010 0110 0010 0011
0     0    a    1    2    6   2     3 

6. addi	x10,x0,5
0000 0000 0101 0000 0000 0101 0001 0011
0     0    5    0   0    5     1    3 		

7. sw x10,4(x8)
0000 0000 1010 0100 0010 0010 0010 0011
0     0    A    4    2    2    2    3
	
8. addi x10,x0,1
0000 0000 0001 0000 0000 0101 0001 0011
0     0    1    0    0    5    1    3
 		
9. sw	x10,8(x8)
0000 0000 1010 0100 0010 0100 0010 0011
0     0    A    4     2   4    2    3




10. addi x9, x8, 0
0000 0000 0000 0100 0000 0100 1001 0011
0     0    0   4     0    4    9    3

11. addi x10, x0, 0 
0000 0000 0000 0000 0000 0101 0001 0011
0     0   0     0   0    5     1    3

12. addi x11, x0, 0 
0000 0000 0000 0000 0000 0101 1001 0011
0     0   0     0   0    5     9    3



13.lw x12, 0(x9) 
0000 0000 0000 0100 1010 0110 0000 0011
0     0    0    4    A    6    0    3

14. add x10,x10,x12 
0000 0000 1100 0101 0000 0101 0011 0011
0     0    C    5    0    5   3     3

15. addi x9,x9,4 
0000 0000 0100 0100 1000 0100 1001 0011
0     0    4    4    8    4    9    3

16. addi x11,x11,1
0000 0000 0001 0101 1000 0101 1001 0011
0     0    1    5    8    5    9    3 

17. addi x13,x0,3
0000 0000 0011 0000 0000 0110 1001 0011
0    0     3    0    0    6    9    3 

18. beq x11,x13,8
0000 0000 1101 0101 1000 0100 0110 0011
0     0    D    5    8    4    5    3

19. beq x11,x11,-20
1111 1110 1011 0101 1000 0110 0110 0011
F     E    B    5    8     6   6    3

